{"version":3,"sources":["webpack://generator/webpack/bootstrap","webpack://generator/./src/generator.js","webpack://generator/./src/solver.js"],"names":["getInitState","fillVal","Array","fill","map","createCompletedPuzzle","numGivens","initState","newState","addRandomValuesToState","console","log","fixedVals","row","val","result","newerSolve","completedState","copyState","state","i","copy","isArray","slice","length","numVals","x","getRandom","y","allowed","getRandomArrayVal","lowerBound","upperBound","Math","floor","random","arr","generate","difficulty","completedPuzzle","dugPuzzle","digPuzzle","numToDig","undiggableCells","randY","randX","digCell","newUndiggableCells","givenVal","otherVals","filter","every","newSolve","nextCell","prevCell","finalState","finalAllowed","undefined","nextY","nextX","allowedVals","newVal","find","curY","curX","getValidAllowed","invalidVals","includes","tryVal","solved","concat","newInvalid","invRow","invY","getAdjacentValues","coord","xVals","yVals","squareVals","getValues","getSquareCoords","getSquare","getAdjacentCoords","xCoords","yCoords","squareCoords","getAdjacentCoordsInclusive","checkForSolution","adjacentCoords","getAllowed","xAllowed","getXAllowed","yAllowed","getYAllowed","squareAllowed","getSquareAllowed","options","getOptions","err","Error","data","coords","xNonOptions","getNonOptions","yNonOptions","squareNonOptions","arrayContainsArray","containerArray","array","item","arrayIntersect","arrs","reduce","intersecting","set1","Set","set2","has","pop","adjacent","adjacentVals","num","adjCoordsInc","xMatching","findMatching","yMatching","squareMatching","forEach","arraysAreIdentical","match","xNullCoords","filterNullCoords","xExistingVals","xNonExistingVals","xEval","available","matching","matchingOps","otherCoord","nullCoords","nonNullCoords","nullCoordNonOptions","nonOptions","nullCoord","option","remainingNonOptions","index","op","from","coordinates","getValue","onlyNulls","coordinate","square","some","squareCoordMap","getUniqueValues","arr1","arr2","isSolved","checkSolutionIsValid","valsAreValid","sort","rows","cols","squares","rowsValid","colsValid","squaresValid","solveShallow","prevState","error","printState","solveDeep","solveAttempt","numFilledCells","numFilled","numFilled2","cell","entries","testState","text","rowString","rowText","rowIndex","isValidValue","parseState","inputState","solve","startState"],"mappings":"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","file":"generator.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/generator.js\");\n","import solve, {arraysAreIdentical, getAllowed, isSolved, printState} from './solver';\n\nfunction getInitState(fillVal = null) {\n  return Array(9).fill([]).map(() => [...(Array(9).fill(fillVal))]);\n}\n\nconst createCompletedPuzzle = () => {\n  const numGivens = 11;\n  const initState = getInitState();\n  const newState = addRandomValuesToState(initState, numGivens);\n  console.log(printState(newState));\n  const fixedVals = newState.map(row => {\n    return row.map(val => val === null ? null : 'fixed');\n  });\n  const result = newerSolve(newState, [0,0], getInitState([]), fixedVals);\n  console.log(result);\n  return result.completedState;\n  // console.log(printState(result));\n};\n\n// const copyState = state => state.map(row => row.slice());\nfunction copyState(state) {\n  let i, copy;\n  if( Array.isArray( state ) ) {\n    copy = state.slice( 0 );\n    for( i = 0; i < copy.length; i++ ) {\n      copy[ i ] = copyState( copy[ i ] );\n    }\n    return copy;\n  } else if( state !== null && typeof state === 'object' ) {\n    throw 'Cannot clone array containing an object!';\n  } else {\n    return state;\n  }\n}\n\n// TODO: This is putting `undefined` into some cells\nfunction addRandomValuesToState(state, numVals = 1, ) {\n  if (numVals === 0) return state;\n  const x = getRandom(0, 8);\n  const y = getRandom(0, 8);\n  if (state[y][x] !== null) return addRandomValuesToState(state, numVals);  // If already added a value here, try again\n  const allowed = getAllowed(state, [y, x]);\n  state[y][x] = getRandomArrayVal(allowed);\n  return addRandomValuesToState(state, numVals - 1);\n}\n\nexport const getRandom = (lowerBound = 1, upperBound = 9) => {\n  return Math.floor(Math.random() * (upperBound - lowerBound + 1)) + lowerBound;\n  // return Math.floor(Math.random() * upperBound) + lowerBound;\n};\n\nconst getRandomArrayVal = (arr) => {\n  return arr[getRandom(0, arr.length - 1)];\n};\n\nconst generate = (difficulty = 'medium') => {\n  const completedPuzzle = createCompletedPuzzle();\n  console.log(completedPuzzle);\n  if (completedPuzzle === false) return generate(difficulty);\n  const dugPuzzle = digPuzzle(completedPuzzle, 45, getInitState());\n  console.log(dugPuzzle);\n};\n\nfunction digPuzzle(state, numToDig, undiggableCells) {\n  if (numToDig === 0) return state;\n  const randY = getRandom(0, 8);\n  const randX = getRandom(0, 8);\n  console.log(`Coord: ${randY} | ${randX}`);\n  if (state[randY][randX] === null || undiggableCells[randY][randX] === true) return digPuzzle(state, numToDig, undiggableCells);\n  const result = digCell(state, [randY, randX]);\n  if (result === false) {\n    const newUndiggableCells = copyState(undiggableCells);\n    newUndiggableCells[randY][randX] = true;\n    return digPuzzle(state, numToDig, newUndiggableCells);\n  }\n  const newState = copyState(state);\n  newState[randY][randX] = null;\n  console.log(`New state dig at ${randY}, ${randX}:`);\n  console.log(printState(newState));\n  return digPuzzle(newState, numToDig - 1, undiggableCells);\n}\n\nconst digCell = (state, [y, x]) => {\n  const givenVal = state[y][x];\n  const otherVals = [1,2,3,4,5,6,7,8,9].filter(val => val === givenVal);\n  return otherVals.every(val => {\n    const newState = copyState(state);\n    newState[y][x] = val;\n    return newerSolve(newState, [0, 0], getInitState([]), getInitState()) === false;\n  });\n};\n\nfunction newSolve(state, [y, x]) {\n  const nextCell = () => {\n    if (x === 8 && y === 8) return null;\n    if (x === 8) return [y + 1, 0];\n    return [y, x + 1];\n  };\n  const prevCell = () => {\n    if (x === 0 && y === 0) return null;\n    if (x === 0) return [y - 1, 0];\n    return [y, x - 1];\n  };\n  // const allowed = allowedVals ? allowedVals : getAllowed(state, [y, x]);\n  if (nextCell() === null && state[y][x] !== null) return state;\n  if (nextCell() === null) {\n    const finalState = copyState(state);\n    const finalAllowed = getAllowed(state, [8,8]);\n    if (finalAllowed.length) {\n      return finalAllowed[0];\n      // finalState[y][x] = finalAllowed[0];\n      // console.log(printState(finalState));\n      // return finalState;\n    }\n    return undefined;\n  }\n  const [nextY, nextX] = nextCell();\n  if (state[y][x] === null) {\n    const allowedVals = getAllowed(state, [y, x]);\n    const newVal = allowedVals.find((val) => {\n      console.log(`attempting ${val} on [${y}, ${x}]`);\n      const newState = copyState(state);\n      newState[y][x] = val;\n      return newSolve(newState, [nextY, nextX]) !== undefined;\n    });\n    if (newVal === undefined) return undefined;\n    const newState = copyState(state);\n    newState[y][x] = newVal;\n    console.log(printState(newState));\n    return newSolve(newState, [nextY, nextX]);\n  }\n  return newSolve(state, [nextY, nextX]);\n}\n\nconst nextCell = (curY, curX) => {\n  if (curX === 8 && curY === 8) return null;\n  if (curX === 8) return [curY + 1, 0];\n  return [curY, curX + 1];\n};\n\n// const prevCell = () => {\n//   if (x === 0 && y === 0) return null;\n//   if (x === 0) return [y - 1, 0];\n//   return [y, x - 1];\n// };\n\nconst getValidAllowed = (state, [y, x], invalidVals) => {\n  return getAllowed(state, [y, x])\n    .filter(val => !invalidVals[y][x].includes(val));\n};\n\nfunction newerSolve(state, [y, x], invalidVals, fixedVals) {\n  if (fixedVals[y][x] === 'fixed') {\n    const [nextY, nextX] = nextCell(y, x);\n    return newerSolve(state, [nextY, nextX], invalidVals, fixedVals);\n  }\n  const allowedVals = getValidAllowed(state, [y, x], invalidVals);\n  if (!allowedVals.length) return false;\n  const tryVal = allowedVals[0];  // TODO: randomize which allowedVal we use to prevent bias towards lower numbers\n  // console.log(printState(state));\n  // console.log(\"allowed: \" + allowedVals);\n  // console.log(\"tryVal: \" + tryVal + \" on \" + y + \", \" + x);\n  // console.log(state);\n  let newState = copyState(state);\n  newState[y][x] = tryVal;\n  if (y === 8 && x === 8) return {solved: true, completedState: newState};\n  const [nextY, nextX] = nextCell(y, x);\n  let result = newerSolve(newState, [nextY, nextX], invalidVals, fixedVals);\n  if (typeof result === 'object' && result.solved === true) return result;\n  if (result === false) {\n    // console.log('FALSE!');\n    invalidVals[y][x] = invalidVals[y][x].concat(tryVal);  // TODO: make immutable\n    const newInvalid = copyState(invalidVals).map((invRow, invY) => {\n      if (invY > y) return invRow.fill([]);\n      if (invY === y) return invRow.fill([], x + 1);\n      return invRow;\n    });\n    newState = undefined;\n    invalidVals = undefined;\n    result = undefined;\n    return newerSolve(state, [y, x], newInvalid, fixedVals);\n  }\n  console.log('how did we get here?');\n}\n\ngenerate();\n\nexport default generate;","// Returns all of the values in the same row, column, and square of a given coordinate\nexport const getAdjacentValues = (state, coord) => {\n  const [y, x] = coord;\n  const xVals = state[y];\n  const yVals = state.map(row => row[x]);\n  const squareVals = getValues(state, getSquareCoords(getSquare(y, x)));\n  return {x: xVals, y: yVals, squareVals: squareVals};\n};\n\n// Returns all of the coordinates in the same row, column, and square of a given coordinate\nexport const getAdjacentCoords = (coord) => {\n  const [y, x] = coord;\n  const xCoords = [0,1,2,3,4,5,6,7,8].map(y => [y, x]).filter(coord => coord[0] !== y);\n  const yCoords = [0,1,2,3,4,5,6,7,8].map(x => [y, x]).filter(coord => coord[1] !== x);\n  const squareCoords = getSquareCoords(getSquare(y, x))\n    .filter(coord => coord[0] !== y || coord[1] !== x);\n  return {x: xCoords, y: yCoords, squareCoords: squareCoords};\n};\n// Same as getAdjacentCoords but includes given coordinate\nconst getAdjacentCoordsInclusive = (coord) => {\n  const [y, x] = coord;\n  const xCoords = [0,1,2,3,4,5,6,7,8].map(y => [y, x]);\n  const yCoords = [0,1,2,3,4,5,6,7,8].map(x => [y, x]);\n  const squareCoords = getSquareCoords(getSquare(y, x));\n  return {x: xCoords, y: yCoords, squareCoords: squareCoords};\n};\n\n// Attempt to find the solution for a given coord\nconst checkForSolution = (state, coord) => {\n  const [y, x] = coord;\n  if (state[y][x]) return state[y][x];\n  const adjacentCoords = getAdjacentCoords(coord);\n  const allowed = getAllowed(state, coord);\n  const xAllowed = getXAllowed(state, coord);\n  const yAllowed = getYAllowed(state, coord);\n  const squareAllowed = getSquareAllowed(state, coord);\n  if (xAllowed.length === 1) return xAllowed[0];\n  if (yAllowed.length === 1) return yAllowed[0];\n  if (squareAllowed.length === 1) return squareAllowed[0];\n\n  const options = getOptions(state, coord);\n  if (allowed.length === 1) {\n    return allowed[0];\n  }\n  if (options.length === 1) {\n    return options[0];\n  }\n  if (allowed.length === 0) {\n    const err = new Error();\n    err.data = {\n      state: state,\n      coords: [y, x],\n    };\n    throw err;  // If there are no options then there was an error earlier\n  }\n\n  // Check what OTHER adjacent nulls CAN'T be\n  // For squares, x-line, and y-line\n  const xNonOptions = getNonOptions(state, adjacentCoords.x);\n  const yNonOptions = getNonOptions(state, adjacentCoords.y);\n  const squareNonOptions = getNonOptions(state, adjacentCoords.squareCoords);\n\n  if (xNonOptions.length === 1) return xNonOptions[0];\n  if (yNonOptions.length === 1) return yNonOptions[0];\n  if (squareNonOptions.length === 1) return squareNonOptions[0];\n\n  // If no solution is found return null\n  return null;\n};\n\n// Detect if multiple coords have the exact same options\n// Detect if the number of coords with the same options is the same as the number of values\n// Remove those values from all other coords\n// Check for x, y, and square coords and then intersect results?\n// Create metastate with new options in place of previous getOptions?\n// Otherwise modify getOptions to use do this automatically?\n\n// test = [\n//     {coord: [2,1], options: [1,2,7,8], mustBeOf: null},\n//     {coord: [5,1], options: [2,7,8], mustBeOf: null},\n//     {coord: [7,1], options: [1,2], mustBeOf: null},\n//     {coord: [8,1], options: [1,2], mustBeOf: null},\n// ];\n\n// If first array contains second array\nconst arrayContainsArray = (containerArray, array) => {\n  return containerArray\n    .filter((item) => {\n      return (\n        Array.isArray(item) &&\n        arrayIntersect(item, array).length === array.length\n      );\n    })\n    .length > 0;\n};\n\nconst arrayIntersect = (...arrs) => {\n  return arrs.reduce((intersecting, arr) => {\n    const set1 = new Set(intersecting), set2 = new Set(arr);\n    return [...set1].filter(val => set2.has(val));\n  }, arrs.pop());\n};\n\nexport const getAllowed = (state, coord) => {\n  const adjacent = getAdjacentValues(state, coord);\n  const adjacentVals = [].concat(adjacent.x, adjacent.y, adjacent.squareVals);\n  return [1,2,3,4,5,6,7,8,9].filter(num => {\n    return !adjacentVals.includes(num);\n  });\n};\nconst getXAllowed = (state, coord) => {\n  const adjacent = getAdjacentValues(state, coord);\n  return [1,2,3,4,5,6,7,8,9].filter(num => {\n    return !adjacent.x.includes(num);\n  });\n};\nconst getYAllowed = (state, coord) => {\n  const adjacent = getAdjacentValues(state, coord);\n  return [1,2,3,4,5,6,7,8,9].filter(num => {\n    return !adjacent.y.includes(num);\n  });\n};\nconst getSquareAllowed = (state, coord) => {\n  const adjacent = getAdjacentValues(state, coord);\n  return [1,2,3,4,5,6,7,8,9].filter(num => {\n    return !adjacent.squareVals.includes(num);\n  });\n};\n\nconst getOptions = (state, coord) => {\n  let allowed = getAllowed(state, coord);\n  const adjCoordsInc = getAdjacentCoordsInclusive(coord);  // Get adjacent coordinates, both num and null\n  const xMatching = findMatching(state, adjCoordsInc.x);\n  const yMatching = findMatching(state, adjCoordsInc.y);\n  const squareMatching = findMatching(state, adjCoordsInc.squareCoords);\n\n  [].concat(xMatching, yMatching, squareMatching).forEach(match => {\n    if (!arraysAreIdentical(allowed, match)) {\n      allowed = allowed.filter(val => !match.includes(val));\n    }\n  });\n  return allowed;\n};\n\nconst findMatching = (state, adjacent) => {\n  const xNullCoords = filterNullCoords(state, adjacent, true);  // Null adjacent coordinates\n  const xExistingVals = getValues(state, filterNullCoords(state, adjacent));  // Non-null values\n  const xNonExistingVals = [1,2,3,4,5,6,7,8,9].filter(num => !xExistingVals.includes(num));  // Vals not in X yet\n  const xEval = xNullCoords.map(coord => ({\n    coord: coord,\n    available: xNonExistingVals,\n    options: getAllowed(state, coord),  // Legal values for coord\n  }));\n  return xEval.reduce((matching, coord) => {\n    // Get all OTHER coords with matching options\n    const matchingOps = xEval\n      .filter(otherCoord => {\n        return arraysAreIdentical(coord.options, otherCoord.options) &&\n          !arraysAreIdentical(coord.coord, otherCoord.coord);\n      });\n\n    if (matchingOps.length === coord.options.length - 1 &&\n      !arrayContainsArray(matching, coord.options)) {\n      return matching.concat([coord.options]);\n    }\n    return matching;\n  }, []);\n};\n\nconst getNonOptions = (state, coords) => {\n  // Get null coordinates\n  const nullCoords = filterNullCoords(state, coords, true);\n  const nonNullCoords = filterNullCoords(state, coords);\n  // Get all values that the null coordinates cannot be,\n  // and that aren't already in the other coordinates\n  const nullCoordNonOptions = nullCoords\n    .reduce((nonOptions, nullCoord) => {\n      // Get all values that the coordinate COULD be\n      const options = getOptions(state, nullCoord);\n      // Add all values that aren't an option for the coordinate\n      return nonOptions\n        .concat([1,2,3,4,5,6,7,8,9]\n          .filter(num => !options.includes(num)));\n    }, [])\n    .filter(option => !getValues(state, nonNullCoords).includes(option));\n  // Get all values that are \"non-options\" for EVERY null coordinate given\n  const remainingNonOptions = nullCoordNonOptions.reduce((nonOptions, option, index, arr) => {\n    if (arr.filter(op => op === option).length === nullCoords.length) {\n      return nonOptions.concat(option);\n    }\n    return nonOptions;\n  }, []);\n  // Return unique values from\n  return Array.from(new Set(remainingNonOptions));\n};\n\nconst getValues = (state, coordinates) => {\n  return coordinates.map(coord => getValue(state, coord));\n};\n\nconst filterNullCoords = (state, coords, onlyNulls = false) => {\n  if (onlyNulls) {\n    return coords.filter(coord => getValue(state, coord) === null);\n  }\n  return coords.filter(coord => getValue(state, coord) !== null);\n};\n\n// Get the value of a given coordinate from the given puzzle state\nconst getValue = (state, coordinate) => state[coordinate[0]][coordinate[1]];\n\n// Get the square (1 through 9) that contains the given coordinates\n// TODO: Consider caching square/coordinate maps to save performance\nconst getSquare = (y, x) => {\n  return [1,2,3,4,5,6,7,8,9].find(square => {\n    return getSquareCoords(square).some(coord => {\n      return arraysAreIdentical(coord, [y, x]);\n    });\n  });\n};\n\n// Get the coordinates contained within in a given square (1 through 9)\nconst getSquareCoords = (square) => {\n  // No reason to calculate this each time, stored data as a property\n  return squareCoordMap[square];\n  // const yMapper = {\n  //   1: [0, 1, 2], 2: [0, 1, 2], 3: [0, 1, 2],\n  //   4: [3, 4, 5], 5: [3, 4, 5], 6: [3, 4, 5],\n  //   7: [6, 7, 8], 8: [6, 7, 8], 9: [6, 7, 8],\n  // };\n  // const xMapper = {\n  //   1: [0, 1, 2], 2: [3, 4, 5], 3: [6, 7, 8],\n  //   4: [0, 1, 2], 5: [3, 4, 5], 6: [6, 7, 8],\n  //   7: [0, 1, 2], 8: [3, 4, 5], 9: [6, 7, 8],\n  // };\n  // const yVals = [].concat(yMapper[square], yMapper[square], yMapper[square]).sort();\n  // const xVals = [].concat(xMapper[square], xMapper[square], xMapper[square]);\n  // return yVals.map((val, index) => [val, xVals[index]]);\n  //\n  // // return yMapper[square].reduce((coords, y) => {\n  // //   return coords.concat(xMapper[square].map(x => [y, x]));\n  // // }, []);\n};\n\nconst getUniqueValues = (array) => Array.from(new Set(array));\n\nexport const arraysAreIdentical = (arr1, arr2) => {\n  if (!Array.isArray(arr1) || !Array.isArray(arr2)) return undefined;\n  if (arr1.length !== arr2.length) return false;\n\n  for (let i = arr1.length; i--;) {\n    if (Array.isArray(arr1[i]) || Array.isArray(arr2[i])) {\n      if (!arraysAreIdentical(arr1[i], arr2[i])) {\n        return false;\n      }\n    } else if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const isSolved = (state) => ![].concat(...state).includes(null);\n\nexport const checkSolutionIsValid = (state) => {\n  const valsAreValid = (arr) => {\n    return arraysAreIdentical([1,2,3,4,5,6,7,8,9], arr.slice().sort());\n  };\n\n  const rows = state;\n  const cols = [0,1,2,3,4,5,6,7,8].map(x => state.map(row => row[x]));\n  const squares = [1,2,3,4,5,6,7,8,9].map(square => getValues(state, getSquareCoords(square)));\n\n  const rowsValid = rows.every(valsAreValid);\n  const colsValid = cols.every(valsAreValid);\n  const squaresValid = squares.every(valsAreValid);\n\n  return rowsValid && colsValid && squaresValid;\n};\n\nconst solveShallow = (state, x = 0, y = 0, prevState = null) => {\n  try {\n    state[y][x] = checkForSolution(state, [y, x]);\n  } catch (error) {\n    // console.log(error);\n    // if (error.data) console.log(printState(error.data.state));\n    return {solved: false, state: state, error: error};\n  }\n\n  if (x === 8 && y === 8) {\n    if (isSolved(state)) {\n      console.log(printState(state));\n      console.log('Solved!');\n      return {solved: true, state: state};\n    }\n    if (prevState !== null) {\n      if (arraysAreIdentical(state, prevState)) {\n        return {solved: false, state: state};  // Break out if no solution found. Prevents infinite recursion\n      }\n    }\n    prevState = copyState(state);\n    return solveShallow(state, 0, 0, prevState);\n  }\n\n  if (x === 8) {\n    return solveShallow(state, 0, y + 1, prevState);\n  }\n\n  return solveShallow(state, x + 1, y, prevState);\n};\n\nconst solveDeep = (state) => {\n  const solveAttempt = solveShallow(state);\n  if (solveAttempt.solved === false) {\n    state = copyState(solveAttempt.state);\n    // Just gonna go ahead and do some heavy nested looping here\n    // For each null cell, get it's possible values,\n    // then try solving it with each one until a correct solution is found\n    const numFilledCells = state.reduce((numFilled, row) => {\n      return row.reduce((numFilled2, cell) => {\n        if (cell) numFilled2++;\n        return numFilled2;\n      }, numFilled);\n    }, 0);\n    // if (numFilledCells < 17) return {solved: false, state: state, error: 'Less than 17 cells'};\n    for (const [y, row] of state.entries()) {\n      for (const [x, val] of row.entries()) {\n        if (val === null) {\n          const options = getOptions(state, [y, x]);\n          if (options.length > 8) continue;\n          for (const option of options) {\n            const testState = copyState(state);\n            testState[y][x] = option;\n            const result = solveShallow(testState);\n            if (result.solved === true) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n  }\n  return solveAttempt;\n};\n\nconst copyState = (state)  => state.map(arr => [...arr]);\n\nexport const printState = (state) => {\n  return state.reduce((text, row, index) => {\n    if (index === 3 || index === 6) {\n      text = text.concat(\"\\n\");  // Add horizontal spacing\n    }\n    const rowString = row.reduce((rowText, val, rowIndex) => {\n      val = val === null ? '_' : val;\n      if (rowIndex === 3 || rowIndex === 6) {\n        rowText = rowText.concat(' ');  // Add vertical spacing\n      }\n      return rowText.concat(' ' + val);\n    }, '');\n    return text.concat(\"|\" + rowString + \" |\\n\");\n  }, '');\n};\n\nconst isValidValue = (val) => [1,2,3,4,5,6,7,8,9].includes(val);\n\nconst parseState = (inputState) => {\n  return inputState.map(row => {\n    return row.map(val => isValidValue(val) ? val : null);\n  });\n};\n\nexport default function solve(startState) {\n  const state = parseState(startState);\n  return solveDeep(state);\n};\n\n// Map of squares to the coordinates they contain\nconst squareCoordMap = {\n  1:[[0,0],[0,1],[0,2],[1,0],[1,1],[1,2],[2,0],[2,1],[2,2]],\n  2:[[0,3],[0,4],[0,5],[1,3],[1,4],[1,5],[2,3],[2,4],[2,5]],\n  3:[[0,6],[0,7],[0,8],[1,6],[1,7],[1,8],[2,6],[2,7],[2,8]],\n  4:[[3,0],[3,1],[3,2],[4,0],[4,1],[4,2],[5,0],[5,1],[5,2]],\n  5:[[3,3],[3,4],[3,5],[4,3],[4,4],[4,5],[5,3],[5,4],[5,5]],\n  6:[[3,6],[3,7],[3,8],[4,6],[4,7],[4,8],[5,6],[5,7],[5,8]],\n  7:[[6,0],[6,1],[6,2],[7,0],[7,1],[7,2],[8,0],[8,1],[8,2]],\n  8:[[6,3],[6,4],[6,5],[7,3],[7,4],[7,5],[8,3],[8,4],[8,5]],\n  9:[[6,6],[6,7],[6,8],[7,6],[7,7],[7,8],[8,6],[8,7],[8,8]],\n};\n\n//\n// const _ = null;\n// const initialState = [\n//   [2,4,3,9,_,8,_,_,_],\n//   [7,9,_,_,4,_,3,_,8],\n//   [_,_,5,7,6,_,2,9,_],\n//   [_,_,9,8,7,2,4,1,_],\n//   [_,_,7,_,_,_,6,_,_],\n//   [_,2,1,4,3,6,7,_,_],\n//   [_,5,4,_,2,7,8,_,_],\n//   [6,_,8,_,9,_,_,2,7],\n//   [_,_,_,6,_,5,9,4,3]\n// ];\n//\n// const challengingState = [\n//   [1,_,_,_,_,8,_,_,9],\n//   [_,_,2,_,_,_,_,_,8],\n//   [_,8,_,5,4,9,_,_,_],\n//   [_,4,_,2,_,_,9,_,_],\n//   [3,_,9,_,_,_,2,_,1],\n//   [_,_,1,_,_,5,_,4,_],\n//   [_,_,_,9,1,2,_,3,_],\n//   [7,_,_,_,_,_,1,_,_],\n//   [2,_,_,7,_,_,_,_,6]\n// ];\n//\n// const hardState = [\n//   [_,4,_,1,5,_,_,8,3],\n//   [_,3,_,_,6,_,5,_,_],\n//   [6,_,_,_,_,_,_,_,9],\n//   [_,5,_,_,_,_,_,_,_],\n//   [1,_,_,7,_,8,_,_,2],\n//   [_,_,_,_,_,_,_,6,_],\n//   [5,_,_,_,_,_,_,_,4],\n//   [_,_,4,_,8,_,_,7,_],\n//   [8,6,_,_,2,4,_,9,_]\n// ];\n//\n// const fiendishState = [\n//   [_,_,_,5,_,_,_,6,_],\n//   [8,_,9,_,_,_,_,1,_],\n//   [1,6,_,_,8,7,_,_,_],\n//   [3,_,_,_,2,6,_,_,_],\n//   [_,_,7,_,1,_,6,_,_],\n//   [_,_,_,8,5,_,_,_,3],\n//   [_,_,_,4,7,_,_,2,1],\n//   [_,4,_,_,_,_,9,_,8],\n//   [_,8,_,_,_,3,_,_,_]\n// ];\n\n// const solver = new Solver();\n// console.log(printState(fiendishState));\n// console.log(solve(fiendishState));\n\n// const squareData = [1,2,3,4,5,6,7,8,9].map(square => {\n//   return {[square]: solver.getSquareCoords(square)};\n// });\n// console.log(squareData);\n// console.log(JSON.stringify(squareData));\n\n// const sampleState = [\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null],\n//   [null,null,null,null,null,null,null,null,null]\n// ];\n"],"sourceRoot":""}